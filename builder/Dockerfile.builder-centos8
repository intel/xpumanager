# Copyright (C) 2021-2025 Intel Corporation.
# SPDX-License-Identifier: MIT
FROM centos:8.2.2004@sha256:4062bbdd1bb0801b0aa38e0f83dece70fb7a5e9bce223423a68de2d8b784b43b

ARG L0_SRC_URL=https://github.com/oneapi-src/level-zero/archive/refs/tags/v1.19.2.tar.gz
ARG CMAKE_INSTALLER_URL=https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.sh
ARG METEE_URL=https://github.com/intel/metee/archive/refs/tags/4.0.0.tar.gz
ARG IGSC_URL=https://github.com/intel/igsc/archive/refs/tags/V0.9.5.tar.gz
ARG ZLIB_VERSION=v1.3.1
ARG GRPC_VERSION=v1.56.2
ARG CARES_VERSION=cares-1_29_0

RUN cd /etc/yum.repos.d/ && \
    sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* &&\
    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* &&\
    sed -i 's/$releasever/8.2.2004/g' /etc/yum.repos.d/CentOS-*

RUN dnf update -y && \
    dnf clean all && \
    dnf install -y dnf-plugins-core \
    curl \
    gcc \
    gcc-c++ \
    git \
    libtool \
    libudev-devel \
    make \
    openssl-devel \
    python38 \
    python38-devel \
    python38-pip \
    rpm-build \
    libffi-devel && \
    dnf config-manager --set-enabled PowerTools && \
    dnf -y install epel-release && \
    dnf install -y  \
    ccache \
    doxygen \
    glibc-static \
    lua-devel && \
    dnf clean all

RUN mkdir cmake && \
    cd cmake && \
    curl -s $CMAKE_INSTALLER_URL --output cmake.sh && \
    chmod +x cmake.sh && \
    ./cmake.sh --skip-license && \
    rm -f cmake.sh

ENV PATH="/cmake/bin:${PATH}".

RUN git clone --recurse-submodules --depth 1 -b $GRPC_VERSION https://github.com/grpc/grpc && \
    cd /grpc/third_party/zlib && \
    git pull https://github.com/madler/zlib $ZLIB_VERSION && \
    #Fix cmake build directory interference issue
    GIT_COMMITTER_NAME="sys_xpum" GIT_COMMITTER_EMAIL="sys_xpum@intel.com" git cherry-pick f1f503da85d52e56aae11557b4d79a42bcaa2b86 && \
    cd /grpc/third_party/cares/cares/ && \
    git pull https://github.com/c-ares/c-ares.git $CARES_VERSION && \
    cd /grpc && \
    mkdir -p cmake/build && \
    cd cmake/build && \
    cmake -DgRPC_INSTALL=ON \
      -DgRPC_BUILD_TESTS=OFF \
      ../.. && \
    make -j4 && make install && \
    rm -fr /grpc

COPY builder/requirements.txt /tmp/requirements.txt
RUN python3 -m pip --proxy=$http_proxy install --upgrade pip && \
    python3 -m pip --proxy=$http_proxy install -r /tmp/requirements.txt

RUN curl -s --location $METEE_URL | tar -xz && \
    cd /metee-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /metee-*

RUN curl -s --location $IGSC_URL | tar -xz && \
    cd /igsc-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /igsc-*

RUN curl -s --location ${L0_SRC_URL} | tar -xz && \
    cd /level-zero-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release && \
    cmake --build . --config Release --target install && \
    rm -fr /level-zero-* && \
    ldconfig
